---
import PostCard from "@components/PostCard.astro";
import BaseLayout from "@layouts/BaseLayout.astro";
import { getShowablePosts, getUniqueTags, sortPosts } from "@util/BlogHelper";
import { capitalizeFirstLetter } from "@util/StringHelpers";
import { type CollectionEntry, getCollection } from "astro:content";

export const prerender = true;

export type Props = {
  posts: CollectionEntry<"blog">[];
  tag: string;
};

export async function getStaticPaths() {
  const allPosts = await getCollection("blog", getShowablePosts);
  const uniqueTags = getUniqueTags(allPosts);

  return uniqueTags.map((tag) => ({
    params: { tag },
    props: {
      tag,
      posts: allPosts.filter((post) => post.data.tags.includes(tag)),
    },
  }));
}

const { posts, tag } = Astro.props;
const titleString = `${capitalizeFirstLetter(tag)} Tagged Posts | SamTheQ`;
---

<BaseLayout title={titleString} description={`All blog posts with the ${tag} tag`}>
  <main
    id="stq-page-content"
    class="bs-container-md mt-16 max-w-[52rem] grow scroll-mt-16 px-4 pb-28"
  >
    <!-- sm:px-6 md:px-8 lg:max-w-6xl xl:px-12 -->
    <section data-post-heading class="mb-4 pt-5 text-center">
      <h1 class="mb-4 text-4xl font-semibold tracking-tight sm:text-5xl">
        {capitalizeFirstLetter(tag)}
      </h1>
      <p class="text-lg">Posts that contain the "{tag}" tag</p>
    </section>
    <ul data-post-list data-post-count={posts.length} class="mt-8 space-y-16">
      {
        posts.length > 0 ? (
          posts.sort(sortPosts).map((post) => <PostCard {...post.data} slug={post.slug} />)
        ) : (
          <li class="text-xl md:text-center lg:text-2xl">
            <p class="mb-3">Huh, it looks like there are no posts available to read.</p>
            <p>Try checking back in the future!</p>
          </li>
        )
      }
    </ul>
  </main>
</BaseLayout>
