---
import Button from "@components/Button.astro";
import BaseLayout from "@layouts/BaseLayout.astro";
import { getCollection } from "astro:content";

export const prerender = true;

const allTags = await getCollection("tag");
---

<BaseLayout title="Blog Tags" description="All Post Tags">
  <main id="stq-page-content" class="bs-container-md mt-16 grow scroll-mt-16">
    <section class="my-8 grid items-center md:grid-cols-2">
      <div data-heading>
        <h1
          class="mb-5 text-center text-4xl font-semibold max-md:mb-4 sm:text-5xl md:text-left lg:text-6xl"
        >
          Tags
        </h1>
      </div>
      <div data-description>
        <p class="mb-2 lg:text-lg/6">
          By clicking on one of the tags below, you can find a subset of all posts that contain that
          tag.
        </p>
        <p class="lg:text-lg/6">
          Tags in this case, are keywords that help classify a blog post's content
        </p>
      </div>
    </section>
    <section class="relative inline-flex flex-wrap gap-2">
      {
        allTags.map(({ id }) => (
          <Button href={`/tags/${id}`} variant="tag" class:list={["tag", id, "font-bold"]}>
            {id}
          </Button>
        ))
      }
    </section>
  </main>
</BaseLayout>

<style>
  .tag {
    @apply border-neutral-600 bg-neutral-600 text-xl text-white focus:outline-offset-0 focus:outline-cyan-400 focus:ring-0 hocus:border-neutral-700 hocus:bg-neutral-700 hocus:text-white lg:text-2xl;
  }

  .tag.react {
    @apply border-gray-800 bg-gray-800 text-sky-500 hocus:border-gray-900 hocus:bg-gray-900;
  }

  .tag.nextjs {
    @apply border-black bg-black text-white hocus:border-stone-900 hocus:bg-stone-900;
  }

  .tag.javascript {
    @apply border-yellow-400 bg-yellow-400 text-black hocus:border-yellow-500 hocus:bg-yellow-500;
  }

  .tag.typescript {
    @apply border-blue-600 bg-blue-600 text-white hocus:border-blue-700 hocus:bg-blue-700;
  }

  .tag.css {
    @apply border-pink-400 bg-pink-400 text-black hocus:border-pink-300 hocus:bg-pink-300;
  }

  .tag.svelte {
    @apply border-orange-700 bg-orange-700 text-white hocus:border-orange-600 hocus:bg-orange-600;
  }
</style>
