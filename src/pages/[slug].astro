---
import { type CollectionEntry, getCollection, getEntries } from "astro:content";
import { getPublicPosts } from "@util/BlogHelper";
import BaseLayout from "@layouts/BaseLayout.astro";
import Button from "@components/Button.astro";
import { format, differenceInDays } from "date-fns";
import TableOfContents from "@components/TableOfContents.astro";
import Author from "@components/Author.astro";

export type Props = CollectionEntry<"blog">;

export async function getStaticPaths() {
  const blog = await getCollection("blog", getPublicPosts);
  return blog.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

const {
  data: { title, publishDate, description, cover, coverAlt, ...rest },
  // eslint-disable-next-line @typescript-eslint/unbound-method
  render,
} = Astro.props;
const ogImage = cover
  ? {
      src: new URL(cover.src, Astro.site).toString(),
      alt: coverAlt ?? "Blog post cover image",
      type: cover.format,
    }
  : undefined;

const tags = rest.tags.map(({ id }) => id);
const authors = (await getEntries(rest.authors)).map(({ data }) => data);

const { Content, headings, remarkPluginFrontmatter } = await render();

const lastUpdated = remarkPluginFrontmatter.lastUpdated
  ? new Date(remarkPluginFrontmatter.lastUpdated as unknown as string)
  : undefined;
---

<BaseLayout
  {title}
  navTitle={title}
  {description}
  authors={authors.map(({ website }) => website)}
  {tags}
  {publishDate}
  {lastUpdated}
  {ogImage}
>
  <article id="stq-page-content" class="container mb-8 mt-16 max-w-5xl grow scroll-mt-16">
    <section data-time-meta class="pb-5 text-sm md:text-base">
      <p class="mb-2">
        Originally published on {format(publishDate, "MMMM do, yyyy")}
      </p>
      {
        lastUpdated && differenceInDays(lastUpdated, publishDate) > 1 && (
          <p class="mt-2 italic">Last Edited on {format(lastUpdated, "MMMM do, yyyy")}</p>
        )
      }
    </section>
    <section data-tag-list class="inline-flex flex-wrap gap-2 pb-5">
      {
        tags.map((val) => (
          <Button variant="secondary" href={`/tags/${val}`} class="px-2 py-1 lg:text-lg/normal">
            <span class="sr-only">Click or tap this tag to view other posts about</span>
            <span class="font-semibold"> # {val}</span>
          </Button>
        ))
      }
    </section>
    <!-- used to have class of grow, that doesnt do anything if parent is display: block -->
    <section
      data-post-body
      class="prose prose-invert max-w-none lg:prose-xl prose-figcaption:italic prose-strong:font-bold hocus:prose-a:text-accent-lighter-10"
    >
      <h1 class="!mb-5 lg:!text-5xl">{title}</h1>
      <div
        class="not-prose mb-6 inline-flex flex-wrap items-center gap-3 text-base/normal text-white"
      >
        By: {authors.map(({ name, avatar }) => <Author {name} {avatar} />)}
      </div>
      <details class="not-prose text-base/normal" role="navigation" aria-label="Table of Contents">
        <summary
          class="btn btn-primary toc-toggle list-item w-fit select-none rounded-none font-semibold"
          >Table of Contents</summary
        >
        <TableOfContents toc={headings} depth={2} />
      </details>
      <Content />
    </section>
  </article>
</BaseLayout>

<style>
  html {
    scroll-behavior: smooth;
  }
</style>
