---
import type { HTMLAttributes } from "astro/types";
import clsx from "clsx";

export interface Props extends HTMLAttributes<"a"> {
  highlightNested?: boolean;
}
const { href, class: className, highlightNested = false, ...attrs } = Astro.props;

const active = highlightNested
  ? `/${Astro.url.pathname.split("/")[1]}` === href
  : Astro.url.pathname === href;
const classList = clsx("nav-link", { active }, className);
---

<a href={href} class={classList} {...attrs}>
  <slot />
</a>

<style>
  .nav-link {
    @apply my-1 flex whitespace-nowrap rounded p-2 text-white text-opacity-80 transition-colors focus-within:text-opacity-100 hover:bg-gray-800 active:text-opacity-100 hocus:text-white hocus:text-opacity-100 sm:my-0 sm:mx-0.5;
  }
  .nav-link.active {
    @apply font-semibold text-opacity-100;
  }
</style>
